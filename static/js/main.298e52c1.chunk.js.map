{"version":3,"sources":["Nav.tsx","Featured.tsx","Event.tsx","EventPanel.tsx","About.tsx","Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Nav","Component","Featured","Event","this","props","data","name","src","image","desc","base","Airtable","apiKey","EventPanel","getEvents","a","events","select","maxRecords","view","eachPage","records","fetchNextPage","setState","recordsToEventData","err","console","log","state","filter","forEach","record","get","push","type","date","diversity","length","i","About","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAEMA,E,4JACF,WACI,OACI,gCACI,2CAGA,+E,GAPEC,aAeHD,ICfTE,E,4JACF,WACI,OACI,8BACI,uD,GAJOD,aAURC,I,0CCPTC,E,4JACF,WACI,OACI,gCACI,6BAAKC,KAAKC,MAAMC,KAAKC,OACrB,qBAAKC,IAAKJ,KAAKC,MAAMC,KAAKG,QAC1B,4BAAIL,KAAKC,MAAMC,KAAKI,c,GANhBT,aAYLE,ICZTQ,EAAO,IAAIC,IAAS,CAAEC,OAAQ,sBAAsBF,KAAK,qBAkFhDG,E,kDAzEX,WAAYT,GAAa,IAAD,8BACpB,cAAMA,IAaVU,UAdwB,sBAcZ,4BAAAC,EAAA,sDACJC,EAAsB,GAC1BN,EAAK,UAAUO,OAAO,CACtBC,WAAY,EACZC,KAAM,cACHC,UAAS,SAACC,EAASC,GAEtB,EAAKC,SAAS,CAACP,OAAQ,EAAKQ,mBAAmBH,KAC/CC,OACG,SAAcG,GACbA,GACAC,QAAQC,IAAIF,MAIhBC,QAAQC,IAAIX,GACZ,EAAKO,SAAS,CAACP,OAAQA,IAhBf,2CAZR,EAAKY,MAAQ,CACTC,OAAQ,MACRb,OAAQ,IAJQ,E,qDASxB,WACIb,KAAKW,c,gCAwBT,SAAmBO,GACf,IAAIL,EAAsB,GAY1B,OAXAK,EAAQS,SAAQ,SAASC,GACzBL,QAAQC,IAAI,YAAaI,EAAOC,IAAI,eACpChB,EAAOiB,KAAK,CACR3B,KAAMyB,EAAOC,IAAI,cACjBE,KAAMH,EAAOC,IAAI,cACjBvB,KAAMsB,EAAOC,IAAI,eACjBxB,MAAOuB,EAAOC,IAAI,SAClBG,KAAMJ,EAAOC,IAAI,QACjBI,UAAWL,EAAOC,IAAI,kBAGnBhB,I,oBAIX,WAEI,IAAIA,EAAwB,GAC5BU,QAAQC,IAAI,aACZD,QAAQC,IAAIxB,KAAKyB,MAAMZ,OAAOqB,QAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAInC,KAAKyB,MAAMZ,OAAOqB,OAAQC,IAC9CtB,EAAOiB,KACH,cAAC,EAAD,CAAO5B,KAAMF,KAAKyB,MAAMZ,OAAOsB,IAASA,IAI5C,OACA,gCACI,wCACA,8BACKtB,W,GApEQhB,aCVnBuC,E,4JACF,WACI,OACI,gCACI,0CACA,6jBAUA,8a,GAfIvC,aA2BLuC,IC3BTC,E,4JACF,WACI,OACI,8BACI,6C,GAJKxC,aAUNwC,ICITC,E,4JACJ,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,GARUzC,aAcHyC,IChBAC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.298e52c1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Nav extends Component<{}, {}> {\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <h1>\r\n                    Virtualso\r\n                </h1>\r\n                <p>\r\n                    Explore music and become a professional\r\n                </p>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\n\r\nclass Featured extends Component<{}, {}> {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Featured Artist</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Featured;","import React, { Component } from 'react';\r\nimport EventData from './EventData';\r\nimport EventProps from './EventProps';\r\n\r\n// class used to render an event tile\r\nclass Event extends Component<EventProps, {}> {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.props.data.name}</h1>\r\n                <img src={this.props.data.image}/>\r\n                <p>{this.props.data.desc}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Event;","import React, { Component } from 'react';\r\nimport EventData from './EventData';\r\nimport Airtable from 'airtable';\r\nimport Event from './Event';\r\n\r\nconst base = new Airtable({ apiKey: 'keynmrOvRll58ERY7'}).base('appRTSRlXjQ67gLwM'); // im so sorry\r\n\r\ninterface EventPanelState {\r\n    filter: any,\r\n    events: EventData[]\r\n}\r\n\r\nclass EventPanel extends Component<{}, EventPanelState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            filter: \"str\",\r\n            events: []\r\n        };\r\n    }\r\n\r\n    // update state to hold desired events\r\n    componentDidMount() {\r\n        this.getEvents();\r\n    }\r\n\r\n    // function to get events and set state\r\n    getEvents = async () => {\r\n        let events: EventData[] = [];\r\n        base('Events').select({\r\n        maxRecords: 6,\r\n        view: \"Grid view\"\r\n        }).eachPage((records, fetchNextPage) => {\r\n        // this function is called for each page of records\r\n        this.setState({events: this.recordsToEventData(records)});\r\n        fetchNextPage(); // fetch the next one!\r\n        }, function done(err) {\r\n        if (err) { \r\n            console.log(err);\r\n            return;\r\n        }\r\n        });\r\n        console.log(events);\r\n        this.setState({events: events});\r\n    }\r\n\r\n    // converts the API's resonse (messy JSON) to my nice objects\r\n    recordsToEventData(records: any): EventData[] {\r\n        let events: EventData[] = [];\r\n        records.forEach(function(record: any) {\r\n        console.log('Retrieved', record.get('Event Name'));\r\n        events.push({\r\n            name: record.get('Event Name'),\r\n            type: record.get('Event Type'),\r\n            desc: record.get('Description'),\r\n            image: record.get('Image'),\r\n            date: record.get('Date'),\r\n            diversity: record.get('Diversity'),\r\n        });\r\n        });\r\n        return events;\r\n    }\r\n\r\n    // render HTML\r\n    render() {\r\n        // create all of the Event entries\r\n        let events: JSX.Element[] = [];\r\n        console.log('made list');\r\n        console.log(this.state.events.length)\r\n        for (let i = 0; i < this.state.events.length; i++) {\r\n        events.push(\r\n            <Event data={this.state.events[i]} key={i}/>\r\n        );\r\n        }\r\n\r\n        return (\r\n        <div>\r\n            <h1>Events</h1>\r\n            <div>\r\n                {events}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EventPanel;","import React, { Component } from 'react';\r\n\r\nclass About extends Component<{}, {}> {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>About Us</h1>\r\n                <p>\r\n                    Virtualso is a platform to help individuals find and partake in music at any location \r\n                    or region they choose.  In addition to helping people find where they can listen to \r\n                    music, we also help people locate facilities that encourages the learning of instruments \r\n                    no matter how new you are to music. We want to emphasize and promote the stories hidden \r\n                    behind the music we listen to today. Featuring events from diverse backgrounds, we can \r\n                    help people understand the rich history that people have gone through in order for us \r\n                    to have music today.\r\n                </p>\r\n\r\n                <p>\r\n                    We, the creators of Virtualso, are a group of students competing in the DubHacks 2021 \r\n                    Hackathon. The inspiration for this platform came from the increase in usage of technology \r\n                    and how people consume entertainment and media throughout the pandemic. We hope by building \r\n                    Virtualso, people can be brought together by their shared passion for music and learn to \r\n                    appreciate how music came to be.\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\n\r\nclass Footer extends Component<{}, {}> {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>footer</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\nimport Airtable from 'airtable';\nimport EventData from './EventData';\nimport Event from './Event';\nimport { isThisTypeNode } from 'typescript';\nimport Nav from './Nav';\nimport Featured from './Featured';\nimport EventPanel from './EventPanel';\nimport About from './About';\nimport Footer from './Footer';\n\n\ninterface AppState {\n  events: EventData[]; // the data structure representing the events currently inspected\n}\n\nclass App extends Component<{}, {}> {\n  render() {\n    return (\n      <div>\n        <Nav />\n        <Featured />\n        <EventPanel />\n        <About />\n        <Footer />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}